pipeline {

    agent {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }

        stage ('Upload Artifact'){
            steps {
                rtUpload (
                    // Obtain an Artifactory server instance, defined in Jenkins --> Manage Jenkins --> Configure System:
                    serverId: SERVER_ID,
                    spec: """{
                            "files": [
                                {
                                    "pattern": "*/target/.jar",
                                    "target": "libs-snapshot-local"
                                }, {
                                    "pattern": "*/target/.pom",
                                    "target": "Maven-snapshot"
                                }, {
                                    "pattern": "*/target/.war",
                                    "target": "Maven-snapshot"
                                }

                                ]
                                            }"""
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: SERVER_ID
                )
            }
        }
    }
}

